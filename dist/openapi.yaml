---
openapi: 3.0.0
info:
  title: Busa's Recipes
  description: This is Daniel Kazakov's and Itay Paikin's
  contact:
    email: kazadan@post.bgu.ac.il
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/KAZADAN_1/SISE_Assignment3/1.0.0
  description: SwaggerHub API Auto Mocking
tags:
- name: User
  description: Endpoints related to User
- name: Recipe
  description: Endpoints related to the Recipe
paths:
  /Register:
    post:
      tags:
      - User
      summary: Register a new user to the system
      description: |
        By passing in the appropriate parameters a new user is created in the system
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: new user was created
        "400":
          description: bad input parameters
        "404":
          description: page not found
  /Login:
    post:
      tags:
      - User
      summary: Logins user
      description: by giving username and password the user logs in to the system
      operationId: userLogin
      parameters:
      - name: username
        in: query
        description: The user's username
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: password
        in: query
        description: The user's password
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: user signed in
        "400":
          description: username or password is wrong
  /home:
    get:
      tags:
      - Home
      summary: The home page of Busa's Recipes
      description: shows the home page with sign in option and 3 random recipes
      operationId: homeBusaPage
      responses:
        "200":
          description: Homepage's data
        "404":
          description: page not found
  /users/{username}/FamilyRecipes:
    get:
      tags:
      - User
      summary: The users saved family recipes
      description: shows the specific user his saved recipes
      operationId: userRecipe
      parameters:
      - name: username
        in: path
        description: name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: users family recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewRecipe'
        "404":
          description: User not found
  /users/{username}/MyRecipes:
    get:
      tags:
      - Recipe
      summary: The users created recipes
      description: shows the specific user his created recipes
      operationId: userCreatedRecipe
      parameters:
      - name: username
        in: path
        description: name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: users created recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewRecipe'
        "404":
          description: User not found
  /users/{username}/favourites:
    get:
      tags:
      - Recipe
      summary: The users favourite recipes
      description: shows the specific user his favourite recipes
      operationId: userFavouriteRecipe
      parameters:
      - name: username
        in: path
        description: name of the user
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: users favourite recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewRecipe'
        "404":
          description: User not found
  /Recipes/{recipeId}:
    get:
      tags:
      - Recipe
      summary: Data of the recipe
      description: shows all the information about the recipe
      operationId: recipeData
      parameters:
      - name: recipeId
        in: path
        description: id of the recipe
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Recipe's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullRecipe'
        "404":
          description: Recipe not found
  /Recipes/search:
    get:
      tags:
      - Recipe
      summary: search page for recipes
      description: "given a recipe name and an option to add cuisines, diets and intolerances show the recipes"
      operationId: recipeSearch
      parameters:
      - name: recipeName
        in: query
        description: name of the Recipe
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: cuisine
        in: query
        description: cuisine of the Recipe
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: diet
        in: query
        description: diet of the Recipe
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: intolerance
        in: query
        description: intolerance of the Recipe
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: nut alergy
      - name: amount
        in: query
        description: the amount of results for the search to return
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: nut alergy
      responses:
        "200":
          description: Recipe's details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewRecipe'
        "404":
          description: Recipe not found
components:
  schemas:
    User:
      required:
      - country
      - email
      - firstName
      - lastName
      - password
      - username
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username must contain between 3 to 8 alphabetical characters
          example: Basbusa
        firstName:
          type: string
          example: Mister
        lastName:
          type: string
          example: Gever
        country:
          type: string
          example: Spain
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password must be between 5 to 10 characters containing at least one digit and one special character
          example: Busa1000$
        email:
          type: string
          description: must contain '@'
          example: yourBusa@gmail.com
    PreviewRecipe:
      required:
      - cookingTime
      - glutenFree
      - popularity
      - recipeId
      - recipeImage
      - recipeName
      - vegan
      - vegetarian
      type: object
      properties:
        recipeId:
          type: integer
          description: recipe's identifier
          example: 1
        recipeName:
          type: string
          description: the name of the recipe
          example: Mama's Meatballs
        recipeImage:
          type: string
          description: image of the recipe
          format: url
        cookingTime:
          type: number
          description: the time in minutes to make the recipe
          format: minutes
          example: 35
        popularity:
          type: integer
          description: The overall popularity of the recipe
          example: 0
        vegan:
          type: boolean
          description: is the recipe vegan or not
          example: false
        vegetarian:
          type: boolean
          description: is the recipe vegetarian or not
          example: false
        glutenFree:
          type: integer
          description: is the recipe gluten free or not
    FullRecipe:
      required:
      - ingredients
      - instructions
      - recipePreview
      - servings
      type: object
      properties:
        recipePreview:
          $ref: '#/components/schemas/PreviewRecipe'
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: string
          description: the instructions of making the recipe
        servings:
          type: number
          description: the number of the servings of the recipe
    Ingredient:
      required:
      - ingredientName
      - quantity
      type: object
      properties:
        ingredientName:
          type: string
          description: the name of the ingredient
        quantity:
          type: string
          description: the quantity of the ingredient in the recipe and the unit
          format: <quantity> <units>
          example: 50 milliliter
